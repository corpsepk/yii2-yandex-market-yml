<?php
/**
 * @link https://github.com/corpsepk/yii2-yandex-market-yml
 * @copyright Copyright (c) 2016 Corpsepk
 * @license http://opensource.org/licenses/MIT
 */
namespace corpsepk\yml\models;

use yii\base\Model;

/**
 * @link https://partner.market.yandex.ru/legal/tt
 * @package corpsepk\yml
 */
class Offer extends Model
{
    /**
     * @link https://yandex.ru/support/partnermarket/currencies.xml
     * @var array
     */
    const CURRENCY_AVAILABLE = ['RUR', 'RUB', 'UAH', 'BYN', 'KZT', 'USD', 'EUR'];

    /**
     * В атрибуте id указывается идентификатор товарного предложения.
     * Атрибут может содержать только цифры и латинские буквы.
     * Максимальная длина id — 20 символов.
     * Идентификатор предложения должен быть уникальным среди всех товарных
     * предложений одного прайс-листа.
     *
     * Если у двух и более товарных предложений указать одинаковые атрибуты id,
     * то идентификатор будет присвоен только первому из этих предложений.
     * Для остальных будет выводиться предупреждающее сообщение об отсутствии идентификатора.
     *
     * @var string
     */
    public $id;

    /**
     * В атрибуте type указывается тип описания —
     * в YML существуют несколько типов описаний предложений товаров:
     * упрощенный (значение не указывается),
     * произвольный (значение "vendor.model"),
     * книги (значение "book"),
     * аудиокниги (значение "audiobook"),
     * музыкальная и видео продукция (значение "artist.title"),
     * туры (значение "tour")
     * и билеты на мероприятие (значение "event-ticket").
     *
     * Указание типа описания обязательно за исключением упрощенного описания.
     * Товарные предложения, описанные не в соответствии со своим типом, могут не приниматься к публикации.
     * @var string
     */
    public $type;

    /**
     * В атрибуте available указывается статус доступности товара:
     * «false» — товарное предложение на заказ.
     * Магазин готов принять заказ и осуществить поставку товара
     * в течение согласованного с покупателем срока, не превышающего двух месяцев
     * (за исключением товаров, изготавливаемых на заказ,
     * ориентировочный срок поставки которых оговаривается с покупателем во время заказа).
     * «true» — товарное предложение в наличии.
     * Магазин готов сразу договариваться с покупателем о доставке/покупке товара.
     *
     * @var bool
     */
    public $available;

    /**
     * В атрибуте bid указывается основная ставка товарного предложения,
     * @var string
     */
    public $bid;

    /**
     * В атрибуте cbid — ставка для карточки модели.
     * @var string
     */
    public $cbid;

    /**
     * URL страницы товара.
     * Максимальная длина URL — 512 символов.
     * Необязательный элемент для магазинов-салонов.
     *
     * @var string|null
     */
    public $url;

    /**
     * Цена, по которой данный товар можно приобрести.
     * Цена товарного предложения округляется, формат, в котором она отображается,
     * зависит от настроек пользователя.
     *
     * Обязательный элемент.
     *
     * В следующих категориях допускается передавать начальную цену "от" с помощью атрибута from=true:
     * Банкетки и скамьи;
     * Ванные комнаты;
     * Гостиные;
     * Детские;
     * Детские комоды;
     * Диваны;
     * Кабинеты;
     * Колыбели и люльки;
     * Комоды;
     * Компьютерные столы;
     * Кресла;
     * Кровати;
     * Кухонные гарнитуры;
     * Кухонные уголки и объединенные группы;
     * Манежи;
     * Парты и стулья;
     * Полки;
     * Прихожие;
     * Пуфики;
     * Спальни;
     * Стеллажи;
     * Столы и столики;
     * Стулья, табуретки;
     * Тумбы;
     * Шкафы.
     * Пример: <price from=true>2000</price>
     *
     * @var string
     */
    public $price;

    /**
     * Параметр необходим для показа скидки на товар.
     * В <oldprice> указывается старая цена товара,
     * которая должна быть обязательно выше новой цены (<price>).
     *
     * Скидка может показываться в процентах.
     * Процент рассчитывается автоматически на основе разницы между <oldprice> и <price>,
     * округляется до целого числа по общематематическим правилам.
     * Необязательный элемент.
     *
     * @var string
     */
    public $oldprice;

    /**
     * Идентификатор валюты товара (RUR, USD, EUR, UAH, KZT).
     * Для корректного отображения цены в национальной валюте необходимо
     * использовать идентификатор (например, UAH) с соответствующим значением цены.
     * Обязательный элемент.
     *
     * @var string
     */
    public $currencyId;

    /**
     * Идентификатор категории товара (целое число не более 18 знаков).
     * Товарное предложение может принадлежать только одной категории.
     * Обязательный элемент.
     * Элемент offer может содержать только один элемент categoryId.
     *
     * @var string
     */
    public $categoryId;

    /**
     * Ссылка на картинку соответствующего товарного предложения.
     * Недопустимо давать ссылку на "заглушку",
     * т.е. на картинку где написано "картинка отсутствует", или на логотип магазина.
     *
     * Максимальная длина URL — 512 символов.
     * Размер картинки — не менее 250 пикселей по одной из сторон.
     *
     * Является обязательным элементом для категорий,
     * данные по которым должны быть представлены только в формате YML:
     * «Мягкая мебель»;
     * «Компьютерные столы»;
     * «Массажные столы»;
     * «Одежда, обувь и аксессуары»;
     * «Косметика, парфюмерия и уход»;
     * «Детские товары» (за исключением подкатегорий «Детские коляски», «Подгузники», «Автокресла», «Конструкторы», «Железные дороги», «Трехколесные велосипеды», «Кроватки»);
     * «Чехлы» для мобильных телефонов;
     * «Защитные пленки и наклейки» для телефонов;
     * «Зарядные устройства» и «Переходники» для мобильных телефонов;
     * «Сумки и чехлы для планшетов».
     *
     * Для всех остальных категорий – необязательный элемент.
     *
     * @var array|string|null
     */
    public $picture;

    /**
     * Элемент позволяет указать возможность купить соответствующий товар в розничном магазине.
     *
     * Возможные значения:
     * 1) false — возможность покупки в розничном магазине отсутствует;
     * 2) true — товар можно купить в розничном магазине.
     *
     * Необязательный элемент.
     *
     * @var bool|null
     */
    public $store;

    /**
     * Элемент позволяет указать возможность зарезервировать выбранный товар и забрать его самостоятельно.
     *
     * Возможные значения:
     * 1) false — возможность «самовывоза» отсутствует;
     * 2) true — товар можно забрать самостоятельно.
     *
     * Необязательный элемент.
     *
     * @var bool|null
     */
    public $pickup;

    /**
     * Элемент позволяет указать возможность доставки соответствующего товара.
     *
     * Возможные значения:
     * 1) false — товар не может быть доставлен;
     * 2) true — товар доставляется на условиях, которые описываются в партнерском интерфейсе в разделе Параметры размещения.
     *
     * Необязательный элемент.
     *
     * @var bool|null
     */
    public $delivery;

    /**
     * Стоимость доставки данного товара в своем регионе.
     *
     * Необязательный элемент.
     *
     * @var string|null
     */
    public $local_delivery_cost;

    /**
     * Группа товаров \ категория.
     * Элемент обязателен для произвольного описания.
     *
     * @var string|null
     */
    public $typePrefix;

    /**
     * Название товарного предложения.
     * В названии упрощенного предложения рекомендуется указывать тип товара,
     * наименование и код производителя.
     * Элемент обязателен для упрощенного описания.
     *
     * @var string|null
     */
    public $name;

    /**
     * Производитель.
     * Необязательный элемент.
     *
     * @var string
     */
    public $vendor;

    /**
     * Код товара (указывается код производителя).
     * Необязательный элемент.
     *
     * @var string|null
     */
    public $vendorCode;

    /**
     * Модель.
     * Обязательный элемент для произвольного описания.
     *
     * @var string|null
     */
    public $model;

    /**
     * Описание товарного предложения.
     * Необязательный элемент.
     *
     * @var string
     */
    public $description;

    /**
     * Элемент используется для отражения информации о минимальной сумме заказа, минимальной партии товара или необходимости предоплаты, а также для описания акций, скидок и распродаж.
     * Допустимая длина текста в элементе — не более 50 символов.
     * Необязательный элемент.
     *
     * Элемент обязателен, если у вас есть ограничения при заказе товара
     * (например, минимальная сумма заказа, минимальное количество товаров или
     * необходимость предоплаты).
     * @link https://yandex.ru/support/partnermarket/elements/sales_notes.html
     *
     * @var string|null
     */
    public $sales_notes;

    /**
     * Элемент предназначен для отметки товаров, имеющих официальную гарантию производителя.
     *
     * Возможные значения:
     * 1) false — товар не имеет официальной гарантии;
     * 2) true — товар имеет официальную гарантию;
     * 3) указание срока гарантии. Формат должен соответствовать ISO 8601, например: P1Y2M10DT2H30M.
     * Расшифровка — 1 год, 2 месяца, 10 дней, 2 часа и 30 минут.
     *
     * Необязательный элемент.
     *
     * @var string|null
     */
    public $manufacturer_warranty;

    /**
     * Элемент предназначен для отметки товаров, имеющих гарантию продавца.
     *
     * Необязательный элемент.
     *
     * Возможные значения:
     * 1) false — товар не имеет гарантию продавца;
     * 2) true — товар имеет гарантию продавца;
     * 3) указание срока гарантии. Формат должен соответствовать ISO 8601, например: P3Y. Расшифровка — 3 года.
     *
     * @var string|null
     */
    public $seller_warranty;

    /**
     * Элемент предназначен для указания страны производства товара.
     * Список стран, которые могут быть указаны в этом элементе, доступен по адресу:
     * @link http://partner.market.yandex.ru/pages/help/Countries.pdf.
     * Если вы хотите участвовать в программе «Заказ на Маркете»,
     * то желательно указывать данный элемент в YML-файле.
     *
     * Необязательный элемент.
     *
     * @var string|null
     */
    public $country_of_origin;

    /**
     * Элемент предназначен для обозначения товара, который можно скачать.
     * Необязательный элемент.
     *
     * @var bool|null
     */
    public $downloadable;

    /**
     * Элемент обязателен для обозначения товара,
     * имеющего отношение к удовлетворению сексуальных потребностей,
     * либо иным образом эксплуатирующего интерес к сексу.
     *
     * Необязательный элемент.
     *
     * @var bool|null
     */
    public $adult;

    /**
     * Необязательный элемент.
     *
     * TODO
     * @link https://yandex.ru/support/partnermarket/export/vendor-model.xml
     * В форматеYML:
     * Годы задаются с помощью атрибута unit со значением year. Допустимые значения параметра age при unit="year": 0, 6, 12, 16, 18.
     * Месяцы задаются с помощью атрибута unit со значением month. Допустимые значения параметра age при unit="month": 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12.
     *
     * @var integer|null
     */
    public $age;

    /**
     * Штрихкод товара, указанный производителем.
     * Необязательный элемент. Элемент offer может содержать несколько элементов barcode.
     *
     * @var string|array|null
     */
    public $barcode;

    /**
     * Элемент предназначен для управления участием товарных предложений в программе «Заказ на Маркете».
     *
     * Необязательный элемент.
     *
     * @var bool|null
     */
    public $cpa;

    /**
     * Элемент обозначает товары, рекомендуемые для покупки вместе с текущим.
     * Необязательный элемент.
     *
     * @var string|null
     */
    public $rec;

    /**
     * Элемент предназначен для указания срока годности/срока службы
     * либо для указания даты истечения срока годности \ срока службы.
     *
     * Значение элемента должно быть в формате ISO8601:
     * для срока годности \ срока службы: P1Y2M10DT2H30M.
     * Расшифровка примера — 1 год, 2 месяца, 10 дней, 2 часа и 30 минут;
     * для даты истечения срока годности \ срока службы: YYYY-MM-DDThh:mm.
     *
     * Необязательный элемент.
     *
     * @var string|null
     */
    public $expiry;

    /**
     * Элемент предназначен для указания веса товара. Вес указывается в килограммах с учетом упаковки.
     * Формат элемента: положительное число с точностью 0.001, разделитель целой и дробной части — точка.
     *
     * При указании более высокой точности значение автоматически округляется следующим способом:
     * если 4-ый знак после разделителя меньше 5, то 3-й знак сохраняется, а все последующие обнуляются;
     * если 4-ый знак после разделителя больше или равен 5, то 3-й знак увеличивается на единицу, а все последующие обнуляются.
     *
     * Необязательный элемент.
     *
     * @var string|null
     */
    public $weight;

    /**
     * Элемент предназначен для указания габаритов товара (длина, ширина, высота) в упаковке. Размеры указываются в сантиметрах.
     * Формат элемента: три положительных числа с точностью 0.001, разделитель целой и дробной части — точка. Числа должны быть разделены символом «/» без пробелов.
     *
     * При указании более высокой точности значение автоматически округляется следующим способом:
     * если 4-ый знак после разделителя меньше 5, то 3-й знак сохраняется, а все последующие обнуляются;
     * если 4-ый знак после разделителя больше или равен 5, то 3-й знак увеличивается на единицу, а все последующие обнуляются.
     *
     * Является обязательным элементом для категории «Одежда, обувь и аксессуары». Для остальных категорий необязательный элемент.
     *
     * @var string|null
     */
    public $dimensions;

    /**
     * Элемент предназначен для указания характеристик товара.
     * Для описания каждого параметра используется отдельный элемент param.
     *
     * Является обязательным элементом для категорий:
     * «Косметика, парфюмерия и уход» при указании объема.
     * «Одежда, обувь, аксессуары» при указании размера и цвета.
     * Для остальных категорий — необязательный элемент.
     * Элемент offer может содержать несколько элементов param.
     *
     * Массив должен содержать элементы с ключами `name` и `value` например,
     * [
     *      ['name' => 'Размер', 'value' => '42-44'],
     *      ['name' => 'Цвет', 'value' => 'Красный']
     * ]
     *
     * @var array|null
     */
    public $param;

    /**
     * Атрибуты элемента <offer>
     * @var array
     */
    public $offerElementAttributes = [
        'id', 'type', 'available', 'bid', 'cbid'
    ];

    /**
     * @return array
     */
    public function getOfferElements()
    {
        return array_diff(
            array_keys($this->attributes),
            $this->offerElementAttributes,
            ['param', 'offerElementAttributes']
        );
    }

    /**
     * @return array
     */
    public function rules()
    {
        return [
            ['id', function() {
                $this->id = (string) $this->id;
                return true;
            }],
            ['id', 'required'],
            ['id', 'string', 'max' => 20],

            ['url', 'string', 'max' => 512],

            ['currencyId', 'required'],
            ['currencyId', 'in', 'range' => self::CURRENCY_AVAILABLE],

            ['categoryId', 'required'],
            ['categoryId', 'number', 'min' => 1],
            ['categoryId', function() {
                if (strlen($this->categoryId) > 18) {
                    return false;
                };

                return true;
            }, 'message' => 'Category id must be less than 18 symbols'],

            // TODO Add `expiry` date validator
            // TODO Add `weight` number validator
            // TODO Add `dimensions` validator
            [
                [
                    'type', 'bid', 'cbid', 'price', 'categoryId',
                    'typePrefix', 'name', 'vendor', 'vendorCode', 'model',
                    'description', 'manufacturer_warranty',
                    'seller_warranty', 'country_of_origin',
                    'expiry', 'weight', 'dimensions',
                ],
                'safe'
            ],

            ['price', 'required'],
            ['oldprice', 'safe'],
            // В <oldprice> указывается старая цена товара, которая должна быть обязательно выше новой цены (<price>).
            // Скидка может показываться в процентах.
            ['oldprice', 'compare', 'compareAttribute' => 'price', 'operator' => '>', 'type' => 'number', 'when' => function(self $model) {
                return strpos($this->oldprice, '%') === false;
            }],

            ['local_delivery_cost', 'number'],

            ['sales_notes', 'string', 'max' => 50],

            // TODO Not implemented yet
//            ['age', 'integer'],
//            ['age', 'in', 'range' => [0, 6, 12, 16, 18]],

            [['available', 'store', 'pickup', 'delivery', 'downloadable', 'adult', 'cpa'], 'boolean'],
            // Булево должно быть преобразовано к строке "true"/"false"
            // https://yandex.ru/support/partnermarket/elements/id-type-available.xml
            [['available', 'store', 'pickup', 'delivery', 'downloadable', 'adult', 'cpa'], function($attribute) {
                $this->$attribute = $this->$attribute ? 'true' : 'false';
            }, 'when' => function($model, $attribute) {
                /** @var $model self */
                return is_bool($model->$attribute);
            }],

            ['barcode', 'safe'],

            ['picture', 'string', 'max' => 512, 'when' => function($model) {
                /** @var $model self */
                return is_string($model->picture);
            }],
            ['picture', 'each', 'rule' => ['string', 'max' => 512], 'when' => function($model) {
                /** @var $model self */
                return is_array($model->picture);
            }],
            ['picture', function() {
                if (count($this->picture) > 10) {
                    $this->addError('Offer can contain maximum 10 pictures, '.count($this->picture).' included');
                    return;
                }
            }, 'when' => function($model) {
                /** @var self $model */
                return is_array($model->picture);
            }],

            ['rec', function() {
                $this->rec = implode(',', $this->rec);
            }, 'when' => function(self $model) {
                return is_array($model->rec);
            }],
            ['rec', 'string'],

            ['param', function() {
                if (!is_array($this->param)) {
                    $this->addError('param', 'Attribute "param" must be an array');
                    return;
                }
                foreach ($this->param as $param) {
                    if (!isset($param['name'], $param['value'])) {
                        $this->addError('param', 'Each param element must contain `name` and `value` keys');
                        return;
                    }
                }
            }, 'when' => function($model) {
                return !empty($model);
            }]
        ];
    }
}
